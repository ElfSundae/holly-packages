{"version":3,"sources":["bootnotify.js","bootnotifyApi.js"],"names":[],"mappingsxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bootnotify-api.js","sourcesContent":["/*!\n * bootnotify.js\n *\n * An easy way to show Bootstrap's notifications.\n *\n * Elf Sundae\n * http://0x123.com\n * 2015-06-07\n */\n\n/**\n * Usage:\n *\n * $().bootnotify(message, type, options);\n *\n * message: pass string to show bootnotify, pass other types to hide bootnotify.\n * type: alert type, can be: info; warning; success; danger; or custom .class suffix.\n * options:\n *\n * // show\n * $(...).bootnotify('message');\n * $(...).bootnotify('message', 'info');\n * $(...).bootnotify('message', 'danger', 'top');\n * $(...).bootnotify({...}, 'my-alert-type');\n *\n * // hide\n * $(...).bootnotify(false);\n * $(...).bootnotify(false, 'info');\n *\n */\n;\n(function($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    title: null, // title for alert\n    close: true, // show close button\n    message: '',\n    position: 'bottom', // 'top', 'bottom', 'after', 'before'\n    animation: 'fade', // null, fade, slide,\n    duration: 300\n  };\n\n  $.fn.bootnotify = function(options, type, position) {\n    if (!this.length) {\n      return this;\n    }\n\n    if (options === false) {\n      $(this).find('.alert' + (type !== undefined ? ('-' + type) : '')).remove();\n      return this;\n    }\n\n    if (options === undefined) {\n      options = {};\n    } else if (typeof(options) == 'string') {\n      options = {\n        message: options\n      };\n    }\n\n    if (type === undefined) {\n      type = 'info';\n    }\n\n    if (typeof(position) == 'string') {\n      options.position = position;\n    }\n\n    options = $.extend({}, defaultOptions, options);\n\n    var html = '<div role=\"alert\" class=\"alert alert-' + type + (options.close ? ' alert-dismissible' : '') + '\">';\n    if (options.close) {\n      html += '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>';\n    }\n    if (options.title) {\n      html += '<h4>' + options.title + '</h4>';\n    }\n    html += options.message;\n    html += '</div>';\n\n    $(this).find('.alert-' + type).remove();\n\n    var alert = $(html).hide();\n    if (options.position === 'top') {\n      alert.prependTo($(this));\n    } else if (options.position === 'after') {\n      alert.insertAfter($(this));\n    } else if (options.position === 'before') {\n      alert.insertBefore($(this));\n    } else {\n      alert.appendTo($(this));\n    }\n    if (options.animation == 'fade') {\n      alert.fadeIn(options.duration);\n    } else if (options.animation == 'slide') {\n      alert.slideDown(options.duration);\n    } else {\n      alert.show();\n    }\n\n    return alert;\n  };\n})(jQuery);\n","/**\n * Notify API result.\n *\n * Usage:\n * $(...).bootnotifyApi({code: 1, msg: 'message'}, {position: 'top'})\n */\n(function($) {\n  \"use strict\";\n\n  $.fn.bootnotifyApi = function(json, options) {\n    $(this).bootnotify(false);\n\n    if (typeof(options) != 'object') {\n      options = {};\n    }\n\n    var type = 'info';\n    if (json === undefined || json.code === undefined) {\n      type = 'danger';\n      options.message = 'bootnotifyApi exception: invalid api response.';\n    } else if (1 == json.code) {\n      type = 'success';\n      options.message = (json.msg !== undefined ? json.msg : '操作成功！');\n    } else {\n      type = 'danger';\n      var msg = (json.msg !== undefined ? json.msg : '操作失败！');\n      if (msg.indexOf('\\n') > -1) {\n        msg = msg.replace(/\\n/g, '<br>');\n      }\n      options.message = msg;\n    }\n\n    return $(this).bootnotify(options, type);\n  };\n})(jQuery);\n"]}